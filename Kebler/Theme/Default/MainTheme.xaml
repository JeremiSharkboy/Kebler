<ResourceDictionary
    x:Class="Kebler.Theme.Default.MainTheme"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Kebler.UI.Controls"
    xmlns:loc="clr-namespace:Kebler.Theme.Default">
    <!--  Colors  -->
    <!--<SolidColorBrush x:Key="BorderBrush" Color="#FF525252" />-->
    <!--<SolidColorBrush x:Key="ContentColor" Color="White" />-->
    <!--<SolidColorBrush x:Key="SelectedBrush" Color="#FF007ACC" />-->
    <!--<SolidColorBrush x:Key="DisabledBrush" Color="#9D9E9F" />-->




    <Color
        x:Key="BackgroundDefaultColor"
        A="255"
        B="44"
        G="44"
        R="45" />
    <Color
        x:Key="BackgroundMouseOverColor"
        A="255"
        B="82"
        G="82"
        R="82" />
    <Color
        x:Key="BackgroundPressedColor"
        A="255"
        B="61"
        G="63"
        R="67" />
    <Color
        x:Key="BackgroundDisabledColor"
        A="255"
        B="157"
        G="158"
        R="159" />
    <Color
        x:Key="BackgroundSelectionColor"
        A="255"
        B="204"
        G="122"
        R="0" />

    <Color
        x:Key="BackgroundActiveColor"
        A="255"
        B="33"
        G="34"
        R="36" />
    <Color
        x:Key="BackgroundInActiveColor"
        A="255"
        B="109"
        G="109"
        R="109" />
    <Color
        x:Key="BackgroundActiveItemColor"
        A="255"
        B="51"
        G="51"
        R="51" />

    <Color
        x:Key="BorderBrushDefaultColor"
        A="255"
        B="82"
        G="82"
        R="82" />
    <Color
        x:Key="BorderActiveColor"
        A="255"
        B="171"
        G="173"
        R="179" />
    <Color
        x:Key="BorderDisabledColor"
        A="255"
        B="153"
        G="153"
        R="153" />

    <Color
        x:Key="ContentInActiveColor"
        A="255"
        B="109"
        G="109"
        R="109" />
    <Color
        x:Key="ContetnSnipColor"
        A="255"
        B="198"
        G="198"
        R="202" />

    <Color
        x:Key="ContetnOverColor"
        A="255"
        B="117"
        G="106"
        R="106" />
    <Color
        x:Key="ContetnOver2Color"
        A="255"
        B="92"
        G="84"
        R="84" />
    <Color
        x:Key="ContetnOver3Color"
        A="255"
        B="48"
        G="48"
        R="48" />

    <Color
        x:Key="ContetnOver4Color"
        A="255"
        B="69"
        G="69"
        R="69" />

    <Color
        x:Key="RedColor"
        A="255"
        B="32"
        G="39"
        R="170" />

    <Color
        x:Key="GreenColor"
        A="255"
        B="66"
        G="132"
        R="56" />


    <Color
        x:Key="BorderBrushBlueColor"
        A="255"
        B="204"
        G="122"
        R="0" />
    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="{DynamicResource BackgroundDefaultColor}" />
    <SolidColorBrush x:Key="TitleBarButtonForegroundBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="TitleBarLabelForegroundBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="TitleBarButtonsBackgroundMouseOverBrush" Color="{DynamicResource BackgroundMouseOverColor}" />
    <SolidColorBrush x:Key="TitleBarButtonsBackgroundPressedBrush" Color="{DynamicResource BackgroundPressedColor}" />

    <SolidColorBrush x:Key="WindowBorderBrush" Color="{DynamicResource BorderBrushBlueColor}" />
    <SolidColorBrush x:Key="WindowBorderInactiveBrush" Color="{DynamicResource BorderDisabledColor}" />
    <SolidColorBrush x:Key="WindowStatusForegroundBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="WindowStatusForegroundInactiveBrush" Color="{DynamicResource ContentInActiveColor}" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{DynamicResource BackgroundDefaultColor}" />
    <SolidColorBrush x:Key="WindowBackgroundActiveBrush" Color="{DynamicResource BackgroundActiveColor}" />
    <SolidColorBrush x:Key="WindowBackgroundInActiveBrush" Color="{DynamicResource BorderDisabledColor}" />



    <SolidColorBrush x:Key="TextBoxForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="TextBoxBackgroundActiveBrush" Color="{DynamicResource BackgroundActiveColor}" />
    <SolidColorBrush x:Key="TextBoxBackgroundInActiveBrush" Color="{DynamicResource BackgroundActiveColor}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{DynamicResource BorderDisabledColor}" />
    <SolidColorBrush x:Key="TextBoxBorderDisabledBrush" Color="{DynamicResource BorderBrushDefaultColor}" />

    <SolidColorBrush x:Key="LabelForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="LabelSnipForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />

    <SolidColorBrush x:Key="CheckBoxForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="CheckBoxForegroundInActiveBrush" Color="{DynamicResource ContentInActiveColor}" />

    <SolidColorBrush x:Key="CheckBoxBorderActiveBrush" Color="{DynamicResource BorderDisabledColor}" />
    <SolidColorBrush x:Key="CheckBoxBorderInActiveBrush" Color="{DynamicResource BorderBrushDefaultColor}" />

    <SolidColorBrush x:Key="GroupBoxForegroundInActiveBrush" Color="{DynamicResource ContentInActiveColor}" />
    <SolidColorBrush x:Key="GroupBoxForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />

    <SolidColorBrush x:Key="TabItemHeaderForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="TabItemHeaderForegroundInActiveBrush" Color="{DynamicResource ContetnSnipColor}" />

    <SolidColorBrush x:Key="TabItemHeaderBackgroundActiveBrush" Color="{DynamicResource BackgroundActiveItemColor}" />
    <SolidColorBrush x:Key="TabItemHeaderBackgroundInActiveBrush" Color="{DynamicResource BackgroundInActiveColor}" />

    <SolidColorBrush x:Key="TabItemSelectedHeaderBackgroundBrush" Color="{DynamicResource BorderBrushBlueColor}" />

    <SolidColorBrush x:Key="TabItemBorderBackgroundBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="TabItemBorderBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="TabItemContentBackgroundBrush" Color="{DynamicResource BackgroundActiveColor}" />

    <SolidColorBrush x:Key="TabControlBorderBackgroundBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="TabControlForegroundActiveBrush" Color="{DynamicResource ContentInActiveColor}" />

    <SolidColorBrush x:Key="BorderBorderBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="BorderBackgroundBrush" Color="{DynamicResource BackgroundActiveColor}" />


    <SolidColorBrush x:Key="TextSelectionBrush" Color="{DynamicResource BackgroundSelectionColor}" />
    <SolidColorBrush x:Key="BorderSelectedBrush" Color="{DynamicResource BorderBrushBlueColor}" />

    <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{DynamicResource BackgroundActiveColor}" />





    <SolidColorBrush x:Key="ButtonBackgroundActiveBrush" Color="{DynamicResource BackgroundActiveColor}" />
    <SolidColorBrush x:Key="ButtonBorderActiveBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="ButtonForegroundActiveBrush" Color="{DynamicResource ContetnSnipColor}" />
    <SolidColorBrush x:Key="ButtonBorderDefaultBrush" Color="{DynamicResource BorderBrushBlueColor}" />
    <SolidColorBrush x:Key="ButtonBorderBackgroundMouseOverBrush" Color="{DynamicResource ContetnOver2Color}" />
    <SolidColorBrush x:Key="ButtonBorderBackgroundMousePressedBrush" Color="{DynamicResource ContetnOver3Color}" />
    <SolidColorBrush x:Key="ButtonBorderBorderMousePressedBrush" Color="{DynamicResource ContetnOver4Color}" />

    <SolidColorBrush x:Key="ListBoxItemBackgroundBrush" Color="{DynamicResource BackgroundActiveColor}" />
    <SolidColorBrush x:Key="ListBoxItemBackgroundSelectedBrush" Color="{DynamicResource BorderBrushBlueColor}" />
    <SolidColorBrush x:Key="ListBoxItemBorderBrush" Color="{DynamicResource BorderBrushDefaultColor}" />
    <SolidColorBrush x:Key="ListBoxBackgroundBrush" Color="{DynamicResource BackgroundDefaultColor}" />

    <SolidColorBrush x:Key="SuccessBrush" Color="{DynamicResource GreenColor}" />
    <SolidColorBrush x:Key="ErrorBrush" Color="{DynamicResource RedColor}" />

    <SolidColorBrush x:Key="WhiteBrush" Color="{DynamicResource WhiteColor}" />
    <SolidColorBrush x:Key="MouseOverBrush" Color="{DynamicResource BackgroundMouseOverColor}" />


    <!--  New Colors  -->
    <Color
        x:Key="GrayColor"
        A="255"
        B="51"
        G="51"
        R="51" />
    <Color
        x:Key="GrayColor2"
        A="255"
        B="39"
        G="39"
        R="39" />
    <Color
        x:Key="GrayColor3"
        A="255"
        B="82"
        G="82"
        R="82" />
    <Color
        x:Key="GrayColor4"
        A="255"
        B="74"
        G="74"
        R="74" />
    <Color
        x:Key="GrayColor5"
        A="255"
        B="34"
        G="34"
        R="34" />
    <Color
        x:Key="GrayColor6"
        A="255"
        B="44"
        G="44"
        R="44" />
    <Color
        x:Key="GrayColor7"
        A="255"
        B="109"
        G="109"
        R="109" />
    <Color
        x:Key="GrayColor8"
        A="182"
        B="182"
        G="182"
        R="0" />
    <Color
        x:Key="GrayColor9"
        A="255"
        B="230"
        G="230"
        R="230" />
    <Color
        x:Key="BlueColor"
        A="255"
        B="204"
        G="122"
        R="0" />
    <Color
        x:Key="WhiteColor"
        A="255"
        B="255"
        G="255"
        R="255" />
    <Color
        x:Key="TransparentColor"
        A="0"
        B="0"
        G="0"
        R="0" />

    <Color
        x:Key="DarkRedColor"
        A="0"
        B="96"
        G="102"
        R="255" />

    <Color
        x:Key="DarkOrangeColor"
        A="0"
        B="59"
        G="167"
        R="248" />
    <Color
        x:Key="DarkYellowColor"
        A="0"
        B="59"
        G="206"
        R="244" />
    <Color
        x:Key="DarkGreenColor"
        A="0"
        B="80"
        G="204"
        R="113" />

    <Color
        x:Key="DarkBlueColor"
        A="0"
        B="77"
        G="185"
        R="244" />
    <Color
        x:Key="DarkPurpleColor"
        A="0"
        B="208"
        G="138"
        R="225" />
    <!--  New Brushes  -->
    <SolidColorBrush x:Key="MainWindowStyleTopBarBackground" Color="{DynamicResource GrayColor}" />

    <SolidColorBrush x:Key="TopBarPopUpBackground" Color="{DynamicResource GrayColor2}" />
    <SolidColorBrush x:Key="TopBarPopUpButtonMouseOverBackground" Color="{DynamicResource GrayColor3}" />
    <SolidColorBrush x:Key="TopBarPopUpButtonMouseOveBorderBrush" Color="{DynamicResource GrayColor4}" />

    <SolidColorBrush x:Key="CheckBoxMouseOverBrush" Color="{DynamicResource BlueColor}" />

    <SolidColorBrush x:Key="ButtonBorderMouseOverBrush" Color="{DynamicResource BlueColor}" />


    <SolidColorBrush x:Key="DataGridCellBorderBrush" Color="{DynamicResource GrayColor}" />
    <SolidColorBrush x:Key="DataGridHeaderCellBorderBrush" Color="{DynamicResource GrayColor}" />
    <SolidColorBrush x:Key="DataGridRowSelectedBrush" Color="{DynamicResource GrayColor3}" />
    <SolidColorBrush x:Key="DataGridRowBackgroundMouseOverBrush" Color="{DynamicResource BlueColor}" />
    <SolidColorBrush x:Key="DataGridRowBorderMouseOverBrush" Color="{DynamicResource BlueColor}" />
    <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="{DynamicResource GrayColor5}" />
    <SolidColorBrush x:Key="DataGridCellForegroundBrush" Color="{DynamicResource GrayColor9}" />
    <SolidColorBrush x:Key="DataGridCellForegroundMouseOverBrush" Color="{DynamicResource WhiteColor}" />

    <SolidColorBrush x:Key="FooterGridBackgroundBrush" Color="{DynamicResource GrayColor}" />
    <SolidColorBrush x:Key="BodyLeftGridBackgroundBrush" Color="{DynamicResource GrayColor6}" />

    <SolidColorBrush x:Key="ProgressBarBackGroundBrush" Color="{DynamicResource GrayColor7}" />
    <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="{DynamicResource TransparentColor}" />
    <SolidColorBrush x:Key="ScrollBarThumbBackgroundBrush" Color="{DynamicResource GrayColor7}" />
    <SolidColorBrush x:Key="ScrollBarThumbBackgroundMouseOverBrush" Color="{DynamicResource BlueColor}" />

    <SolidColorBrush x:Key="MainWindowHeaderCenterBorderBackgroundBrush" Color="{DynamicResource GrayColor6}" />

    <SolidColorBrush x:Key="ListBoxSelectedBackGroundInActiveBrush" Color="{DynamicResource GrayColor3}" />
    <SolidColorBrush x:Key="ListBoxSelectedBackGroundActiveBrush" Color="{DynamicResource BlueColor}" />
    <SolidColorBrush x:Key="ListBoxContentForeGroundBrush" Color="{DynamicResource GrayColor9}" />

    <SolidColorBrush x:Key="TagRedContentBrush" Color="{DynamicResource DarkRedColor}" />
    <SolidColorBrush x:Key="TagGreenContentBrush" Color="{DynamicResource DarkGreenColor}" />
    <SolidColorBrush x:Key="TagOrangeContentBrush" Color="{DynamicResource DarkOrangeColor}" />
    <SolidColorBrush x:Key="TagPurpleContentBrush" Color="{DynamicResource DarkPurpleColor}" />
    <SolidColorBrush x:Key="TagBlueContentBrush" Color="{DynamicResource DarkBlueColor}" />
    <SolidColorBrush x:Key="TagYellowContentBrush" Color="{DynamicResource DarkYellowColor}" />

    <!--  Default Colors  -->

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

    <Style x:Key="TitleBarWindowButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopBarMenuButton" TargetType="{x:Type MenuItem}">
        <Setter Property="Height" Value="27" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid VerticalAlignment="Center">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Header}"
                                ContentSource="Header"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Popup
                                x:Name="PART_Popup"
                                Margin="0"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                VerticalOffset="5">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Margin="0"
                                    Padding="0"
                                    Background="{DynamicResource TopBarPopUpBackground}"
                                    BorderBrush="{DynamicResource BorderBorderBrush}"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                x:Name="Canvas"
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                    Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                    Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <Rectangle
                                                x:Name="Rectangle"
                                                Width="1"
                                                Margin="29,2,0,2"
                                                HorizontalAlignment="Left"
                                                Fill="Red"
                                                Visibility="Collapsed" />
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PopUpTopBarMenuButton" TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid x:Name="borderOfText">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="22"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="13" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                x:Name="Icon"
                                Width="16"
                                Height="16"
                                Margin="3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Icon}"
                                ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <!--  fucking checkbox border ...  -->
                            <Border
                                x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="-1,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="#3D26A0DA"
                                BorderBrush="#FF26A0DA"
                                BorderThickness="1"
                                ClipToBounds="False"
                                Visibility="Collapsed">
                                <Path
                                    x:Name="Glyph"
                                    Width="10"
                                    Height="11"
                                    Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                                    Fill="#FF212121"
                                    FlowDirection="LeftToRight" />
                            </Border>

                            <ContentPresenter
                                x:Name="menuHeaderContainer"
                                Grid.Column="2"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                ContentSource="Header"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock
                                x:Name="menuGestureText"
                                Grid.Column="4"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                Opacity="0.7"
                                Text="{TemplateBinding InputGestureText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderOfText" Property="Background" Value="{DynamicResource TopBarPopUpButtonMouseOverBackground}" />
                        </Trigger>
                        <!--<Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="#3D26A0DA" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF26A0DA" />
                        </Trigger>-->
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                            <Setter TargetName="Glyph" Property="Fill" Value="#FF707070" />
                        </Trigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="templateRoot" Property="Background" Value="#0A000000" />
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#21000000" />
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="MinHeight" Value="300" />
        <Setter Property="MinWidth" Value="300" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="PART_Container">
                        <Grid TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType">
                            <Border
                                x:Name="PART_Border"
                                Grid.RowSpan="2"
                                Width="Auto"
                                Height="Auto"
                                Background="{DynamicResource WindowBackground}"
                                BorderBrush="{StaticResource WindowBorderBrush}"
                                BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="27" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        x:Name="TitleBar"
                                        Grid.Row="0"
                                        Background="{StaticResource MainWindowStyleTopBarBackground}"
                                        BorderBrush="{DynamicResource Red}"
                                        BorderThickness="0,0,0,1"
                                        MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                        MouseMove="TitleBarMouseMove">
                                        <Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="34" />
                                                    <ColumnDefinition Width="34" />
                                                    <ColumnDefinition Width="34" />
                                                </Grid.ColumnDefinitions>
                                                <controls:TopBarControl x:Name="TopBarMenu" />
                                                <Button
                                                    x:Name="MinButton"
                                                    Grid.Column="2"
                                                    VerticalAlignment="Stretch"
                                                    Click="MinButtonClick"
                                                    Style="{StaticResource TitleBarWindowButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                            RenderOptions.EdgeMode="Aliased"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1" />
                                                    </Grid>
                                                </Button>
                                                <Button
                                                    x:Name="MaxButton"
                                                    Grid.Column="3"
                                                    VerticalAlignment="Stretch"
                                                    Click="MaxButtonClick"
                                                    Style="{StaticResource TitleBarWindowButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            x:Name="PART_MaxButton_Path"
                                                            Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                            RenderOptions.EdgeMode="Aliased"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1" />
                                                    </Grid>
                                                </Button>
                                                <Button
                                                    x:Name="CloseButton"
                                                    Grid.Column="4"
                                                    VerticalAlignment="Stretch"
                                                    Click="CloseButtonClick"
                                                    Style="{StaticResource TitleBarWindowButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            Data="M0,0 L8,8 M0,8 L8,0"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1.5" />
                                                    </Grid>
                                                </Button>
                                            </Grid>
                                            <Grid>
                                                <TextBlock
                                                    x:Name="Caption"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontFamily="Segoe UI"
                                                    FontSize="12"
                                                    Foreground="{DynamicResource LabelSnipForegroundActiveBrush}"
                                                    Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, FallbackValue='Title'}" />
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" />
                                </Grid>
                            </Border>
                            <Line
                                x:Name="lnSizeNorth"
                                Grid.RowSpan="2"
                                Cursor="SizeNS"
                                MouseDown="OnSizeNorth"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="1"
                                Y2="1" />
                            <Line
                                x:Name="lnSizeSouth"
                                Grid.RowSpan="2"
                                Margin="0,-2,0,0"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNS"
                                MouseDown="OnSizeSouth"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="{TemplateBinding ActualHeight}"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Line
                                x:Name="lnSizeWest"
                                Grid.RowSpan="2"
                                Cursor="SizeWE"
                                MouseDown="OnSizeWest"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="1"
                                Y1="1"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Line
                                x:Name="lnSizeEast"
                                Grid.RowSpan="2"
                                Margin="-2,0,0,0"
                                HorizontalAlignment="Right"
                                Cursor="SizeWE"
                                MouseDown="OnSizeEast"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="{TemplateBinding ActualWidth}"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="1"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Rectangle
                                x:Name="rectSizeNorthWest"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Cursor="SizeNWSE"
                                Fill="Transparent"
                                MouseDown="OnSizeNorthWest" />
                            <Rectangle
                                x:Name="rectSizeNorthEast"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Cursor="SizeNESW"
                                Fill="Transparent"
                                MouseDown="OnSizeNorthEast" />
                            <Rectangle
                                x:Name="rectSizeSouthWest"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNESW"
                                Fill="Transparent"
                                MouseDown="OnSizeSouthWest" />
                            <Rectangle
                                x:Name="rectSizeSouthEast"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNWSE"
                                Fill="Transparent"
                                MouseDown="OnSizeSouthEast" />
                        </Grid>
                    </Border>



                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8" />
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="rectSizeSouthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeSouthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeSouth" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeNorth" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <!--<Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource WindowBackgroundBrush}" />
                        </Trigger>-->
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MinButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="rectSizeSouthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeSouthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeSouth" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeNorth" Property="IsEnabled" Value="False" />
                            <Setter TargetName="TopBarMenu" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundBrush}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Background" Value="{StaticResource WindowBackgroundActiveBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Background" Value="{StaticResource WindowBackgroundActiveBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>



    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundActiveBrush}" />
    </Style>



    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundActiveBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundInActiveBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderDisabledBrush}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource GroupBoxForegroundActiveBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Border
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" />
                            </Border>
                        </Border>
                        <Border
                            x:Name="Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="3,1,3,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource GroupBoxForegroundInActiveBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabControlBorderBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource TabControlForegroundActiveBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="headerPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Panel.ZIndex="1"
                            Background="{DynamicResource WindowBackgroundActiveBrush}"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="contentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{DynamicResource WindowBackgroundActiveBrush}"
                            BorderBrush="{DynamicResource BorderBorderBrush}"
                            BorderThickness="0,1,0,0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectedContent}"
                                ContentSource="SelectedContent"
                                ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource TextBoxBorderDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource TabItemForegroundActiveBrush}" />
        <Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TabItemBorderBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="mainBorder" Background="{TemplateBinding Background}">

                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,0" />

                    </Grid>



                    <ControlTemplate.Triggers>

    -->
    <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItemHeaderBackground}" />
                        </MultiDataTrigger>-->

    <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItemHeaderBackground}" />
                        </MultiDataTrigger>-->
    <!--

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource BorderSelectedBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->



    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="*" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundActiveBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundInActiveBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderDisabledBrush}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource TextSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource SelectedBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource BorderBackgroundBrush}" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderActiveBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForegroundActiveBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                    Fill="{StaticResource CheckBoxForegroundActiveBrush}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{StaticResource CheckBoxForegroundActiveBrush}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="2,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderInActiveBrush}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource CheckBoxBorderInActiveBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource CheckBoxBorderInActiveBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxBorderInActiveBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}" />
                            <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxBorderActiveBrush}" />
                            <Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource CheckBoxBorderActiveBrush}" />
                            <Setter TargetName="indeterminateMark" Property="Fill" Value="{DynamicResource CheckBoxBorderActiveBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource TabItemContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TabItemBorderBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>

                        <!--  header background  -->
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Panel.ZIndex="1"
                            Background="{DynamicResource TabItemContentBackgroundBrush}"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectedContent}"
                                ContentSource="SelectedContent"
                                ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource TabItemHeaderForegroundActiveBrush}" />
        <Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TabItemBorderBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">

                    <Grid
                        x:Name="templateRoot"
                        Height="26"
                        Background="Transparent"
                        SnapsToDevicePixels="true"
                        TextOptions.TextFormattingMode="Display"
                        TextOptions.TextRenderingMode="ClearType">
                        <!--<Border
                            x:Name="mainBorder"
                            Visibility="Collapsed"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,1,0">
                            <Border
                                x:Name="innerBorder"
                                Background="{DynamicResource TabItemBorderBackgroundBrush}"
                                BorderBrush="{StaticResource TabItemBorderBrush}"
                                BorderThickness="0,0,1,0"
                                Opacity="0" />
                        </Border>-->
                        <Border
                            x:Name="selectionBorder"
                            Background="Transparent"
                            BorderBrush="{DynamicResource TabItemSelectedHeaderBackgroundBrush}"
                            BorderThickness="0,0,0,1"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.Border}" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>-->

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                        -->
                        <!--<Setter TargetName="mainBorder" Property="Background" Value="{DynamicResource TabItemHeaderBackgroundInActiveBrush}" />-->
                        <!--<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />-->
                        <!--
                        </MultiDataTrigger>-->

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,0,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,0,1,0" />
                        </MultiDataTrigger>-->

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="selectionBorder" Property="Visibility" Value="Visible" />

                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderActiveBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundActiveBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ButtonBorderDefaultBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBackgroundMouseOverBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonBorderMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ButtonBorderMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBorderBackgroundMousePressedBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ButtonBorderBorderMousePressedBrush}" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MetroListBoxItemTemplate">
        <TextBlock Text="{Binding Path=Title, FallbackValue=Title}" />
    </DataTemplate>

    <Style x:Key="MetroListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource LabelSnipForegroundActiveBrush}" />
        <Setter Property="Height" Value="25" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFB9B9B9"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{x:Null}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListBoxItemBackgroundSelectedBrush}" />
                        </MultiTrigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource ListBoxBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MetroListBoxItemStyle}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource MetroListBoxItemTemplate}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="controls:WaterBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundActiveBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:WaterBox">

                    <Border BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="3" />
                            <TextBlock
                                x:Name="watermarkText"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource LabelSnipForegroundActiveBrush}"
                                Text="{TemplateBinding Watermark}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermarkText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RemoveWatermark" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermarkText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>



                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundInActiveBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderDisabledBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundActiveBrush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource TextSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>


    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="Corner"
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="White" />
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Style="{DynamicResource MyScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            Style="{DynamicResource MyScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />

    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="thumbRect" Fill="{DynamicResource ScrollBarThumbBackgroundBrush}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="thumbRect" Property="Fill" Value="{DynamicResource ScrollBarThumbBackgroundMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="AliceBlue" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="10" />
        <Setter Property="MinWidth" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <!--<Grid
                        x:Name="Bg"
                        Width="15"
                        Background="{StaticResource ScrollBarBackgroundBrush}"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                    -->
                    <!--  ************ 3 rows instead of 5 ************  -->
                    <!--
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            x:Name="VerticalSmallDecrease"
                            Grid.Row="0"
                            Height="16"
                            Margin="1"
                            Foreground="{TemplateBinding Foreground}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource VerticalDecrementTemplate}" />
                    -->
                    <!--  ************ Thumb inside Track element called "PART_Track" ************  -->
                    <!--
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton
                            x:Name="VerticalSmallIncrease"
                            Grid.Row="2"
                            Height="16"
                            Margin="1"
                            Foreground="{TemplateBinding Foreground}"
                            Interval="50"
                            IsTabStop="False"
                            Template="{StaticResource VerticalIncrementTemplate}" />
                    </Grid>-->
                    <Grid
                        x:Name="Bg"
                        Width="{TemplateBinding Width}"
                        Background="{StaticResource ScrollBarBackgroundBrush}"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>

                            <RowDefinition />

                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="10" />
                <Setter Property="MinHeight" Value="6" />
                <Setter Property="Background" Value="AliceBlue" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="Bg"
                                Background="AliceBlue"
                                SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScrollBarDisabledBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--  表格外边框线粗细，一般不修改  -->


    <!--  表格外边框颜色  -->
    <SolidColorBrush x:Key="DataGrid.BorderBrush" Color="#CCCEDB" />
    <!--  列头背景色  -->
    <SolidColorBrush x:Key="ColumnHeader.Background" Color="#EEEEF2" />
    <!--  列头背景色  -->
    <SolidColorBrush x:Key="ColumnHeader.Foreground" Color="#FFFFFF" />
    <!--  列头边框颜色  -->
    <SolidColorBrush x:Key="ColumnHeader.BorderBrush" Color="Black" />

    <!--  行边框颜色  -->
    <SolidColorBrush x:Key="DataGridRow.BorderBrush" Color="#E9ECF1" />
    <!--  行默认背景颜色  -->
    <SolidColorBrush x:Key="DataGridRow.Normal.Background" Color="#FFFFFF" />
    <!--  行默认文字颜色  -->
    <SolidColorBrush x:Key="DataGridRow.Normal.Foreground" Color="#000000" />
    <!--  行悬浮背景颜色  -->
    <SolidColorBrush x:Key="DataGridRow.MouseOver.Background" Color="#F6F7FB" />
    <!--  行悬浮文字颜色  -->
    <SolidColorBrush x:Key="DataGridRow.MouseOver.Foreground" Color="#000000" />
    <!--  行选中背景颜色  -->
    <SolidColorBrush x:Key="DataGridRow.Selected.Background" Color="#F6F7FB" />
    <!--  行选中文字颜色  -->
    <SolidColorBrush x:Key="DataGridRow.Selected.Foreground" Color="#000000" />

    <Style TargetType="DataGrid">
        <!--  网格线颜色  -->
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Background" Value="{DynamicResource DataGridBackgroundBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="#00E9ECF1" />
        <Setter Property="VerticalGridLinesBrush" Value="#00E9ECF1" />

        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="IsReadOnly" Value="True" />
        <!--<Setter Property="RowHeight" Value="{StaticResource DataGridRow.Height}" />-->
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border
                        Margin="0,0,0,0"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="22" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <!--<Button
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"
                                            Command="ApplicationCommands.SelectAll"
                                            Focusable="False"
                                            Background="Red"
                                            Foreground="Red"
                                            Content="CYKAAAAA,WTF R U DOING HERE SHITTY BTN"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                          TypeInTargetAssembly={x:Type DataGrid}}}">
                                        -->
                                        <!--<Button.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>-->
                                        <!--
                                        </Button>-->
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <!--<Border
                                            Grid.Column="2"
                                            Margin="-1,0,0,0"
                                            Background="{StaticResource ColumnHeader.Background}" />-->
                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                            CanHorizontallyScroll="False"
                                            CanVerticallyScroll="False"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="0,0,0,0"
                                            HorizontalAlignment="Right"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="0,0,17,0"
                                            VerticalAlignment="Bottom">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Opacity" Value="100" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBorderBrush}" />


        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <!--<Setter Property="Height" Value="{StaticResource ColumnHeader.Height}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border
                        x:Name="BackgroundBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource BorderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <ContentPresenter
                            Margin="5,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundBrush}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridCellBorderBrush}" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.RowSpan="2"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DataGridRowBackgroundMouseOverBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border
                        x:Name="Bg"
                        Padding="3,0,3,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="Transparent"
                        UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>




</ResourceDictionary>