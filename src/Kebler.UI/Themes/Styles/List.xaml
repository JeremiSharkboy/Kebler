<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Kebler.UI.Themes.Styles">
    <Style x:Key="FocusVisual">

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2" SnapsToDevicePixels="true"
                        Stroke="{DynamicResource Item.SelectedActive.Background}"
                        StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="Control.Padding" Value="4,1" />
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Background" Value="{DynamicResource ListBox.Static.Background}" />
        <Setter Property="Control.BorderBrush" Value="Transparent" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Control.Background" Value="{DynamicResource ListBox.Static.Background}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource ListBox.Static.Border}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource ListViewItemStyle}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border
                        x:Name="Bd" Padding="1"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="UIElement.Visibility" Value="Collapsed" />
    </Style>
    <Style
        x:Key="ListViewWithGridViewScrollViewerStyle"
        BasedOn="{StaticResource {x:Type ScrollViewer}}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Control.Padding}">
                            <ScrollViewer
                                DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter
                                    Margin="0"
                                    AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                                    <GridViewRowPresenterBase.Columns>
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}">
                                            <!--
                                                constructor argument:
                                                TemplatedParent.View.Columns
                                            -->

                                        </Binding>
                                    </GridViewRowPresenterBase.Columns>
                                </GridViewHeaderRowPresenter>
                            </ScrollViewer>
                            <ScrollContentPresenter
                                x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                CanHorizontallyScroll="false" CanVerticallyScroll="false"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </DockPanel>
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar" Grid.Row="1" Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                            Minimum="0" Orientation="Horizontal"
                            Style="{DynamicResource HorizontalScrollBarStyle}"
                            ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                            Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar" Grid.Column="1" Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                            Minimum="0" Orientation="Vertical"
                            Style="{DynamicResource VerticalScrollBarStyle}"
                            ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                            Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel
                            Grid.Row="1" Grid.Column="1"
                            Background="{DynamicResource ScrollViewerBackground}"
                            LastChildFill="false">
                            <Rectangle
                                Width="1" DockPanel.Dock="Left"
                                Fill="{DynamicResource ScrollBar.Static.Background}"
                                Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" />
                            <Rectangle
                                Height="1" DockPanel.Dock="Top"
                                Fill="{DynamicResource ScrollBar.Static.Background}"
                                Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListViewItemGridViewStyle"
        BasedOn="{StaticResource ListViewItemStyle}"
        TargetType="{x:Type ListViewItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0" SnapsToDevicePixels="true">
                        <GridViewRowPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                            <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListViewWithGridViewStyle"
        BasedOn="{StaticResource {x:Type ListView}}"
        TargetType="{x:Type ListView}">
        <Style.Resources>
            <Style BasedOn="{StaticResource ListViewItemGridViewStyle}" TargetType="{x:Type ListViewItem}" />
        </Style.Resources>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border
                        x:Name="Bd" Padding="0"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0" SnapsToDevicePixels="true">
                        <ScrollViewer
                            Padding="{TemplateBinding Control.Padding}"
                            Focusable="false"
                            Style="{DynamicResource ListViewWithGridViewScrollViewerStyle}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{DynamicResource Item.SelectedActive.Border}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoSelectionListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListBoxItemWithBorderStyle"
        BasedOn="{StaticResource ListBoxItemStyle}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Control.Background" Value="{DynamicResource ListBox.Static.Background}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource ListBox.Static.Border}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource ListBoxItemStyle}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        Name="Bd" Padding="0"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            <ScrollViewer.Style>
                                <Style>
                                    <Setter Property="ScrollViewer.OverridesDefaultStyle" Value="True" />
                                    <Setter Property="ScrollViewer.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <ScrollContentPresenter Grid.Column="0" />
                                                    <ScrollBar
                                                        Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1"
                                                        Maximum="{TemplateBinding ScrollableHeight}"
                                                        Style="{DynamicResource VerticalScrollBarStyle}"
                                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                        Value="{TemplateBinding VerticalOffset}" />
                                                    <ScrollBar
                                                        Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="1"
                                                        Maximum="{TemplateBinding ScrollableWidth}"
                                                        Orientation="Horizontal"
                                                        Style="{DynamicResource HorizontalScrollBarStyle}"
                                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                        Value="{TemplateBinding HorizontalOffset}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollViewer.Style>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="NoSelectionListBoxStyle"
        BasedOn="{StaticResource {x:Type ListBox}}"
        TargetType="{x:Type ListBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource NoSelectionListBoxItemStyle}" />
    </Style>
    <Style x:Key="DiffListListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="FrameworkElement.Width" Value="18" />
        <Setter Property="FrameworkElement.Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Background" Value="{DynamicResource GridViewColumnHeaderBorderBackground}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Control.Padding}" Background="Transparent">
                        <Rectangle
                            Width="1" HorizontalAlignment="Center"
                            Fill="{TemplateBinding Control.Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Padding" Value="4,0,4,0" />
        <Setter Property="Control.Background" Value="{DynamicResource GridViewColumnHeaderBackground}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource GridViewColumnHeaderBorderBackground}" />
        <Setter Property="Control.BorderThickness" Value="0,0,0,1" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border
                            x:Name="HeaderBorder"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Control.Padding}">
                                    <ContentPresenter
                                        Name="HeaderContent" Margin="0,0,0,1"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        RecognizesAccessKey="true"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{DynamicResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Border.Background" Value="{DynamicResource GridViewColumnHeaderHoverBackground}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Border.Background" Value="{DynamicResource GridViewColumnHeaderPressBackground}" />
                        </Trigger>
                        <Trigger Property="FrameworkElement.Height" Value="Auto">
                            <Setter Property="FrameworkElement.MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="Control.Foreground" Value="{DynamicResource Disabled.ForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>