<ResourceDictionary
    x:Class="Kebler.UI.Themes.Styles.WindowST"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters1="clr-namespace:Kebler.Services.Converters;assembly=Kebler.Services"
    xmlns:local="clr-namespace:Kebler.UI.CSControls.Window"
    xmlns:ui="clr-namespace:Kebler.UI">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
    <converters1:ResizeModeToVisibilityConverter x:Key="ResizeModeToVisibilityConverter" />
    <Geometry x:Key="MinimizeGeometry">
        M0,0 L10,0 10,1.0 10,1.0 1,1.0 0,1.0 z
    </Geometry>
    <Geometry x:Key="MaximizeGeometry">
        M1,1 L1,11 11,11 11,1 z M0,0 L12,0 12,12 0,12 z
    </Geometry>
    <Geometry x:Key="RestoreGeometry">
        M1,4.56 L1,14.56 11,14.56 11,4.56z M4.0,1 L4.0,3.56 12,3.56 12,11 14.0,11 14.0,1 z M3.0,0 L15.0,0 15.0,12 12,12 12,15.56 0,15.56 0,3.56 3.0,3.56 z
    </Geometry>
    <Geometry x:Key="CloseGeometry">
        M0.71,0 L4.6,3.8 8.5,0 9.2,0.71 5.3,4.6 9.2,8.48 8.48,9.2 4.6,5.3 0.71,9.2 0,8.48 3.89,4.6 4.77E-07,0.71 z
    </Geometry>
    <Style x:Key="WindowPathStyle" TargetType="{x:Type Path}">
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Fill" Value="{DynamicResource Window.Button.Static.Foreground}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsPressed}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Shape.Fill" Value="{DynamicResource Window.Button.MouseOver.Foreground}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowCloseButtonPathStyle" TargetType="{x:Type Path}">
        <Setter Property="FrameworkElement.Height" Value="10" />
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Shape.Stretch" Value="Uniform" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true" />
        <Setter Property="Shape.Fill" Value="{DynamicResource Window.Button.Static.Foreground}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsPressed}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Shape.Fill" Value="White" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowButton" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="26" />
        <Setter Property="FrameworkElement.Width" Value="46" />
        <Setter Property="Control.Background" Value="{DynamicResource Window.Button.Static.Background}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" Background="{TemplateBinding Control.Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="{DynamicResource Window.Button.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="{DynamicResource Window.Button.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowCloseButton" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="26" />
        <Setter Property="FrameworkElement.Width" Value="46" />
        <Setter Property="Control.Background" Value="{DynamicResource Window.CloseButton.Static.Background}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Control.Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="{DynamicResource Window.CloseButton.MouseOver.Background}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border" Property="Border.Background" Value="{DynamicResource Window.CloseButton.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style TargetType="{x:Type local:CustomizableWindow}">
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Window.BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomizableWindow}">
                    <Border
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid Margin="{TemplateBinding Control.Padding}" LayoutTransform="{DynamicResource LayoutScaleTransform}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                Name="PART_WindowHeader"
                                Grid.Row="0"
                                Padding="0"
                                Background="{TemplateBinding Control.Background}"
                                BorderBrush="{DynamicResource ToolBarBorderBrush}"
                                BorderThickness="0"
                                Visibility="{TemplateBinding local:CustomizableWindow.HeaderVisibility}">
                                <DockPanel>
                                    <StackPanel
                                        DockPanel.Dock="Right"
                                        Orientation="Horizontal"
                                        WindowChrome.IsHitTestVisibleInChrome="true">
                                        <Button
                                            Name="PART_MinimizeButton"
                                            Command="SystemCommands.MinimizeWindowCommand"
                                            Style="{DynamicResource WindowButton}">
                                            <Path Data="{StaticResource MinimizeGeometry}" Style="{DynamicResource WindowPathStyle}" />
                                        </Button>
                                        <Button
                                            Name="PART_RestoreButton"
                                            Command="SystemCommands.RestoreWindowCommand"
                                            Style="{DynamicResource WindowButton}">
                                            <Path Data="{StaticResource RestoreGeometry}" Style="{DynamicResource WindowPathStyle}" />
                                        </Button>
                                        <Button
                                            Name="PART_MaximizeButton"
                                            Command="SystemCommands.MaximizeWindowCommand"
                                            Style="{DynamicResource WindowButton}">
                                            <Path Data="{StaticResource MaximizeGeometry}" Style="{DynamicResource WindowPathStyle}" />
                                        </Button>
                                        <Button
                                            Name="PART_CloseButton"
                                            Command="SystemCommands.CloseWindowCommand"
                                            Style="{DynamicResource WindowCloseButton}">
                                            <Path Data="{StaticResource CloseGeometry}" Style="{DynamicResource WindowCloseButtonPathStyle}" />
                                        </Button>
                                    </StackPanel>
                                    <Border Background="{TemplateBinding Control.Background}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{TemplateBinding Window.Icon}" />
                                            <Label
                                                Content="{TemplateBinding Window.Title}"
                                                Foreground="{TemplateBinding Control.Foreground}"
                                                Visibility="{TemplateBinding IsTitleVisible,
                                                                             Converter={StaticResource BooleanToVisibility}}" />
                                        </StackPanel>
                                    </Border>
                                </DockPanel>
                            </Border>
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter ClipToBounds="true" />
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ShowHeaderLine}" Value="True">
                            <Setter TargetName="PART_WindowHeader" Property="BorderThickness" Value="0,0,0,1" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="Window.WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="local:CustomizableWindow.FullScreen" Value="true">
                <Setter Property="Window.WindowState" Value="Maximized" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DialogWindowStyle"
        BasedOn="{StaticResource {x:Type local:CustomizableWindow}}"
        TargetType="{x:Type local:DialogWindow}">
        <Setter Property="HideMinimizeMaximizeButtons" Value="true" />
        <Setter Property="Background" Value="{DynamicResource Window.Dialog.Background}" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="false" />
    </Style>
</ResourceDictionary>