<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
    <Style TargetType="{x:Type Separator}">
        <Setter Property="Control.Background" Value="{DynamicResource BorderBrush}" />
    </Style>

    <!--  checkbox  -->
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="OptionMarkGeomentry">
        F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z
    </Geometry>

    <Style TargetType="{x:Type Label}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocuseVisual}" />
        <Setter Property="Control.Background" Value="{DynamicResource OptionMark.Static.Background}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource OptionMark.Static.Border}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Name="checkBoxBorder"
                            Grid.Column="0"
                            Width="14"
                            Height="14"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="{DynamicResource OptionMarkGeomentry}"
                                    Fill="{DynamicResource OptionMark.Static.Glyph}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{DynamicResource OptionMark.Static.Glyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            Focusable="false"
                            RecognizesAccessKey="true"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContentControl.HasContent" Value="true">
                            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Control.Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{DynamicResource OptionMark.MouseOver.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{DynamicResource OptionMark.MouseOver.Border}" />
                            <Setter TargetName="optionMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.MouseOver.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{DynamicResource OptionMark.Disabled.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{DynamicResource OptionMark.Disabled.Border}" />
                            <Setter TargetName="optionMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.Disabled.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.Disabled.Glyph}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Disabled.ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="checkBoxBorder" Property="Border.Background" Value="{DynamicResource OptionMark.Pressed.Background}" />
                            <Setter TargetName="checkBoxBorder" Property="Border.BorderBrush" Value="{DynamicResource OptionMark.Pressed.Border}" />
                            <Setter TargetName="optionMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.Pressed.Glyph}" />
                            <Setter TargetName="indeterminateMark" Property="Shape.Fill" Value="{DynamicResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="UIElement.Opacity" Value="0" />
                            <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Control.Background" Value="{DynamicResource BorderBrush}" />
    </Style>
    <Style x:Key="HorizontalGridSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch" />
        <Setter Property="Control.IsTabStop" Value="false" />
        <Setter Property="FrameworkElement.Margin" Value="0,-2,0,-2" />
        <Setter Property="FrameworkElement.Height" Value="5" />
        <Setter Property="Control.Background" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="Transparent">
                        <Border
                            Height="1"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VerticalGridSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="Control.IsTabStop" Value="false" />
        <Setter Property="FrameworkElement.Margin" Value="-3,0,-3,0" />
        <Setter Property="FrameworkElement.Width" Value="7" />
        <Setter Property="Control.Background" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="Transparent">
                        <Border
                            Width="1"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>