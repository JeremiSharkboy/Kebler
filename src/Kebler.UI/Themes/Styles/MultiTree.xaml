<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Kebler.UI.Themes.Styles"
    xmlns:muliTreeView="clr-namespace:Kebler.UI.CSControls.MuliTreeView"
    xmlns:multiTreeView="clr-namespace:Kebler.UI.CSControls.MultiTreeView">
    <muliTreeView:LevelToIndentationConverter x:Key="LevelToIndentation" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="UIElement.Focusable" Value="false" />
        <Setter Property="FrameworkElement.Width" Value="16" />
        <Setter Property="FrameworkElement.Height" Value="16" />
        <Setter Property="Control.Background" Value="{DynamicResource TreeViewItem.TreeArrow.Static.Fill}" />
        <Setter Property="FrameworkElement.Height" Value="16" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="16"
                        Height="16"
                        Padding="0"
                        Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0,0 L 0,7 5,3.5 Z"
                            Fill="{TemplateBinding Control.Background}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Path.Data" Value="M 0,0 L 3.5,5 7,0 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewControlItemStyle" TargetType="{x:Type multiTreeView:TreeViewControlItem}">
        <Setter Property="UIElement.Focusable" Value="{Binding IsFocusable}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Level, Converter={StaticResource LevelToIndentation}}" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton
                                x:Name="ExpandCollapseToggleButton"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsExpanded}"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                Visibility="{Binding ShowExpander, Converter={StaticResource BooleanToVisibility}}" />
                            <ContentPresenter
                                Grid.Column="2"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedInactive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                            <Setter TargetName="ExpandCollapseToggleButton" Property="Control.Background" Value="{DynamicResource TreeViewItem.TreeArrow.Selected.Fill}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type multiTreeView:MultiselectionTreeView}">
        <Setter Property="Control.Background" Value="{DynamicResource TreeView.Static.Background}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource TreeView.Static.Border}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource TreeViewControlItemStyle}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type multiTreeView:MultiselectionTreeView}">
                    <Border
                        x:Name="Bd"
                        Padding="0"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Padding="{TemplateBinding Control.Padding}"
                            Background="Transparent"
                            Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideBarTreeViewControlItemStyle"
        BasedOn="{StaticResource TreeViewControlItemStyle}"
        TargetType="{x:Type multiTreeView:TreeViewControlItem}">
        <Setter Property="FrameworkElement.Height" Value="22" />
        <Setter Property="Control.FontSize" Value="13" />
    </Style>

    <Style
        x:Key="SideBarMultiselectionTreeViewStyle"
        BasedOn="{StaticResource {x:Type multiTreeView:MultiselectionTreeView}}"
        TargetType="{x:Type multiTreeView:MultiselectionTreeView}">
        <Setter Property="Control.Background" Value="{DynamicResource Sidebar.Static.Background}" />
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource SideBarTreeViewControlItemStyle}" />
    </Style>

    <Style x:Key="TreeViewControlItemGridViewStyle" TargetType="{x:Type multiTreeView:TreeViewControlItem}">
        <Setter Property="UIElement.Focusable" Value="{Binding IsFocusable}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <GridViewRowPresenter
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedInactive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FileListMultiselectionTreeViewWithGridViewStyle"
        BasedOn="{StaticResource {x:Type multiTreeView:MultiselectionTreeView}}"
        TargetType="{x:Type multiTreeView:MultiselectionTreeView}">
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{DynamicResource TreeViewControlItemGridViewStyle}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type multiTreeView:MultiselectionTreeView}">
                    <Border
                        x:Name="Bd"
                        Padding="0"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Padding="{TemplateBinding Control.Padding}"
                            Background="Transparent"
                            Focusable="false"
                            Style="{DynamicResource ListViewWithGridViewScrollViewerStyle}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FileListMultiselectionTreeViewDefaultStyle"
        BasedOn="{StaticResource {x:Type multiTreeView:MultiselectionTreeView}}"
        TargetType="{x:Type multiTreeView:MultiselectionTreeView}" />

    <Style x:Key="RepositoryManagerTreeViewControlItemGridViewStyle" TargetType="{x:Type multiTreeView:TreeViewControlItem}">
        <Setter Property="Control.Padding" Value="2,0,2,0" />
        <Setter Property="UIElement.Focusable" Value="{Binding IsFocusable}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Level, Converter={StaticResource LevelToIndentation}}" />
                                <ColumnDefinition Width="14" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton
                                x:Name="ExpandCollapseToggleButton"
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsExpanded}"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                Visibility="{Binding ShowExpander, Converter={StaticResource BooleanToVisibility}}" />
                            <GridViewRowPresenter
                                Grid.Column="2"
                                Margin="0"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedInactive.Background}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                <Condition Property="ListBoxItem.IsSelected" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Border.Background" Value="{DynamicResource TreeViewItem.SelectedActive.Background}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource ForegroundBrush.Light}" />
                            <Setter TargetName="ExpandCollapseToggleButton" Property="Control.Background" Value="{DynamicResource TreeViewItem.TreeArrow.Selected.Fill}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>