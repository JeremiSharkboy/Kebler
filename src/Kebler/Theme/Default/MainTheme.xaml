<ResourceDictionary
    x:Class="Kebler.Theme.Default.MainTheme"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  Colors  -->
    <SolidColorBrush x:Key="BorderBrush" Color="#FF525252" />
    <SolidColorBrush x:Key="ContentColor" Color="White" />
    <SolidColorBrush x:Key="SelectedBrush" Color="#FF007ACC" />

    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="TitleBarButtonForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="TitleBarButtonsBackgroundBrushMouseOver" Color="#FF525252" />
    <SolidColorBrush x:Key="TitleBarButtonsBackgroundBrushPressed" Color="#FF3D3F43" />

    <SolidColorBrush x:Key="WindowBorderBrush" Color="#FF007ACC" />
    <SolidColorBrush x:Key="WindowBorderBrushInactive" Color="#999999" />
    <SolidColorBrush x:Key="WindowStatusForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="WindowStatusForegroundInactive" Color="#FFFFFF" />
    <SolidColorBrush x:Key="WindowBackground" Color="#2C2C2D" />
    <SolidColorBrush x:Key="WindowBackgroundActive" Color="#212224" />



    <SolidColorBrush x:Key="LabelForeground" Color="White" />
    <SolidColorBrush x:Key="TextBoxBackground" Color="#333333" />
    <SolidColorBrush x:Key="CheckBoxBackground" Color="#333333" />
    <SolidColorBrush x:Key="CheckBoxForeground" Color="White" />
    <SolidColorBrush x:Key="TabItemHeaderBackground" Color="#333333" />

    <!--  Default Colors  -->
    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

    <Style x:Key="VS2012WindowStyleTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource ContentColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="Transparent" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="Transparent" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="MinHeight" Value="300" />
        <Setter Property="MinWidth" Value="300" />

        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <EventSetter Event="Loaded" Handler="WindowLoaded" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--
                        7 is a magic number. By default Windows fits a maximized window with Margin
                        7 7 7 7 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                        between maximized window and screen edges; smaller numbers show parts of
                        the window outside of the current monitor on multi-display computers.
                    -->
                    <Border x:Name="PART_Container">
                        <Grid TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType">


                            <Border
                                x:Name="PART_Border"
                                Grid.RowSpan="2"
                                Width="Auto"
                                Height="Auto"
                                Background="{DynamicResource WindowBackground}"
                                BorderBrush="{StaticResource WindowBorderBrush}"
                                BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Border
                                        x:Name="TitleBar"
                                        Grid.Row="0"
                                        Background="{StaticResource TitleBarBackgroundBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="0,0,0,1"
                                        MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                        MouseMove="TitleBarMouseMove">
                                        <Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="34" />
                                                    <ColumnDefinition Width="34" />
                                                    <ColumnDefinition Width="34" />
                                                </Grid.ColumnDefinitions>
                                                <Button
                                                    x:Name="MinButton"
                                                    Grid.Column="1"
                                                    VerticalAlignment="Stretch"
                                                    Click="MinButtonClick"
                                                    Style="{StaticResource VS2012WindowStyleTitleBarButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                            RenderOptions.EdgeMode="Aliased"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1" />
                                                    </Grid>
                                                </Button>
                                                <Button
                                                    x:Name="MaxButton"
                                                    Grid.Column="2"
                                                    VerticalAlignment="Stretch"
                                                    Click="MaxButtonClick"
                                                    Style="{StaticResource VS2012WindowStyleTitleBarButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            x:Name="PART_MaxButton_Path"
                                                            Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                            RenderOptions.EdgeMode="Aliased"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1" />
                                                    </Grid>
                                                </Button>
                                                <Button
                                                    x:Name="CloseButton"
                                                    Grid.Column="3"
                                                    VerticalAlignment="Stretch"
                                                    Click="CloseButtonClick"
                                                    Style="{StaticResource VS2012WindowStyleTitleBarButton}">
                                                    <Grid MaxWidth="9" MaxHeight="9">
                                                        <Path
                                                            Data="M0,0 L8,8 M0,8 L8,0"
                                                            Stretch="None"
                                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                            StrokeThickness="1.5" />
                                                    </Grid>
                                                </Button>
                                            </Grid>
                                            <Grid>
                                                <TextBlock
                                                    x:Name="Caption"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontFamily="Segoe UI"
                                                    FontSize="12"
                                                    Foreground="{DynamicResource ContentColor}"
                                                    Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, FallbackValue='Title'}" />
                                            </Grid>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter Grid.Row="1" />
                                </Grid>
                            </Border>
                            <Line
                                x:Name="lnSizeNorth"
                                Grid.RowSpan="2"
                                Cursor="SizeNS"
                                MouseDown="OnSizeNorth"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="1"
                                Y2="1" />
                            <Line
                                x:Name="lnSizeSouth"
                                Grid.RowSpan="2"
                                Margin="0,-2,0,0"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNS"
                                MouseDown="OnSizeSouth"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="{TemplateBinding ActualHeight}"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Line
                                x:Name="lnSizeWest"
                                Grid.RowSpan="2"
                                Cursor="SizeWE"
                                MouseDown="OnSizeWest"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="1"
                                X2="1"
                                Y1="1"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Line
                                x:Name="lnSizeEast"
                                Grid.RowSpan="2"
                                Margin="-2,0,0,0"
                                HorizontalAlignment="Right"
                                Cursor="SizeWE"
                                MouseDown="OnSizeEast"
                                Stroke="Transparent"
                                StrokeThickness="3"
                                X1="{TemplateBinding ActualWidth}"
                                X2="{TemplateBinding ActualWidth}"
                                Y1="1"
                                Y2="{TemplateBinding ActualHeight}" />
                            <Rectangle
                                x:Name="rectSizeNorthWest"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Cursor="SizeNWSE"
                                Fill="Transparent"
                                MouseDown="OnSizeNorthWest" />
                            <Rectangle
                                x:Name="rectSizeNorthEast"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Cursor="SizeNESW"
                                Fill="Transparent"
                                MouseDown="OnSizeNorthEast" />
                            <Rectangle
                                x:Name="rectSizeSouthWest"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNESW"
                                Fill="Transparent"
                                MouseDown="OnSizeSouthWest" />
                            <Rectangle
                                x:Name="rectSizeSouthEast"
                                Width="5"
                                Height="5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Cursor="SizeNWSE"
                                Fill="Transparent"
                                MouseDown="OnSizeSouthEast" />
                        </Grid>
                    </Border>



                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8" />
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="rectSizeSouthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeSouthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeSouth" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeNorth" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="MaxButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MinButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="rectSizeSouthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeSouthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="rectSizeNorthWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeEast" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeWest" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeSouth" Property="IsEnabled" Value="False" />
                            <Setter TargetName="lnSizeNorth" Property="IsEnabled" Value="False" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource WindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource WindowBorderBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource LabelForeground}" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource CheckBoxBackground}" />
        <Setter Property="Foreground" Value="{StaticResource CheckBoxForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Margin="1"
                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Margin="2"
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="{StaticResource CheckBoxBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BorderBrush}" />
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
    </Style>


    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4" />
                        <Border
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Grid.ColumnSpan="4"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                                <Border
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2" />
                            </Border>
                        </Border>
                        <Border
                            x:Name="Header"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Padding="3,1,3,0">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource WindowBackgroundActive}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource ContentColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        x:Name="templateRoot"
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="headerPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Panel.ZIndex="1"
                            Background="{DynamicResource WindowBackgroundActive}"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="contentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{DynamicResource WindowBackgroundActive}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0,1,0,0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectedContent}"
                                ContentSource="SelectedContent"
                                ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource TabItemHeaderBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="mainBorder" Background="{TemplateBinding Background}">

                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                            ContentSource="Header"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,0" />

                    </Grid>



                    <ControlTemplate.Triggers>

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItemHeaderBackground}" />
                        </MultiDataTrigger>-->

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItemHeaderBackground}" />
                        </MultiDataTrigger>-->

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource SelectedBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>